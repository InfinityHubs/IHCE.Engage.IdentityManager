name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - '*'

jobs:
  Build-and-Package:
    name: Build and Package
    runs-on: ubuntu-latest
    container: docker:20.10.7
    steps:
      - name: Install Git
        run: apk add --no-cache git
      - name: Install Bash
        run: apk add --no-cache bash
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0 # Ensure full history is fetched, useful for Git operations during publish.
      - name: Version-Tool
        uses: HydrolienF/Version-Tool@0.5.5
        id: version
      - name: print
        run: echo ${{ steps.version.outputs.version }}
      - name: Build
        run: sh ./automate.sh --Target Build
      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-Runner-Artifacts
          path: Build-Runner-Artifacts/
#
#  Container-Image-Scan:
#    name: Container Image Scan
#    runs-on: ubuntu-latest
#    container: docker:20.10.7
#    needs: Build-and-Package
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#      - name: Scan
#        run: sh ./automate.sh --Target Scan
#      - name: Save Artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Build-Runner-Artifacts
#          path: Build-Runner-Artifacts
#


#  Publish-Stable-Branch-Artifacts:
#    name: Publish Stable Branch Artifacts
#    runs-on: ubuntu-latest
#    container: docker:20.10.7
#    needs:
#      - Build-and-Package
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 # Ensure full history is fetched, useful for Git operations during publish.
#      - name: Download Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: Build-Runner-Artifacts
#          path: ./Build-Runner-Artifacts/
#      - name: Publish
#        env:
#          GHP_TOKEN: ${{ secrets.GHP_TOKEN }}
#        run: sh ./automate.sh --Target Publish
#      - name: Clean Workspace
#        run: sh ./automate.sh --Target CleanWorkspace
#

#  Publish-Artifacts-Stable-Branch:
#    name: Publish Artifacts (Stable Branch)
#    runs-on: ubuntu-latest
#    container: docker:20.10.7
#    needs:
#      - Build-and-Package
##      - Container-Image-Scan
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#      - name: Download Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: Build-Runner-Artifacts
#          path: ./Build-Runner-Artifacts/  # Directory where artifacts will be downloaded.
#      - name: Publish
#        run: sh ./automate.sh --Target Publish
#      - name: Clean Workspace
#        run: sh ./automate.sh --Target CleanWorkspace
#
#  Publish-Artifacts-UnStable-Branch:
#    name: Publish Artifacts (Unstable Branch)
#    runs-on: ubuntu-latest
#    container: docker:20.10.7
#    needs:
#      - Build-and-Package
#      - Container-Image-Scan
#    if: github.ref != 'refs/heads/main'
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#      - name: Publish
#        run: sh ./automate.sh --Target Publish
#      - name: Clean Workspace
#        run: sh ./automate.sh --Target CleanWorkspace
